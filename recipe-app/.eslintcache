[{"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/index.js":"1","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/reportWebVitals.js":"2","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/App.js":"3","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/reducers/index.js":"4","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Login.js":"5","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/utils/axiosWithAuth.js":"6","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Signup.js":"7","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/PrivateRoute.js":"8","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/actionTypes.js":"9","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/index.js":"10","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientsForm.js":"11","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Dashboard.js":"12","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/NavBar.js":"13","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Recipe.js":"14","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/UpdateForm.js":"15","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientList.js":"16","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/AddRecipe.js":"17","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/styles.js":"18","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Ingredient.js":"19","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/SearchBar.js":"20","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsForm.js":"21","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsList.js":"22","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Step.js":"23"},{"size":1015,"mtime":1609314905719,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1608141854567,"results":"26","hashOfConfig":"25"},{"size":1349,"mtime":1609620432633,"results":"27","hashOfConfig":"25"},{"size":6454,"mtime":1609611946921,"results":"28","hashOfConfig":"25"},{"size":2091,"mtime":1609561281397,"results":"29","hashOfConfig":"25"},{"size":251,"mtime":1609314905726,"results":"30","hashOfConfig":"25"},{"size":1831,"mtime":1609314905716,"results":"31","hashOfConfig":"25"},{"size":459,"mtime":1608235072322,"results":"32","hashOfConfig":"25"},{"size":2123,"mtime":1609569620184,"results":"33","hashOfConfig":"25"},{"size":6172,"mtime":1609570201015,"results":"34","hashOfConfig":"25"},{"size":2059,"mtime":1609561281393,"results":"35","hashOfConfig":"25"},{"size":3043,"mtime":1609561281386,"results":"36","hashOfConfig":"25"},{"size":1378,"mtime":1609561281401,"results":"37","hashOfConfig":"25"},{"size":3098,"mtime":1609621790090,"results":"38","hashOfConfig":"25"},{"size":2358,"mtime":1609617317366,"results":"39","hashOfConfig":"25"},{"size":1186,"mtime":1609621271321,"results":"40","hashOfConfig":"25"},{"size":2477,"mtime":1609385289503,"results":"41","hashOfConfig":"25"},{"size":2748,"mtime":1609621736529,"results":"42","hashOfConfig":"25"},{"size":1439,"mtime":1609561281387,"results":"43","hashOfConfig":"25"},{"size":1626,"mtime":1609561281406,"results":"44","hashOfConfig":"25"},{"size":2387,"mtime":1609561806077,"results":"45","hashOfConfig":"25"},{"size":1145,"mtime":1609614276490,"results":"46","hashOfConfig":"25"},{"size":2082,"mtime":1609614067435,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"86h1rn",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/index.js",[],["100","101"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/reportWebVitals.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/App.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/reducers/index.js",["102"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Login.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/utils/axiosWithAuth.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Signup.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/PrivateRoute.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/actionTypes.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/index.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientsForm.js",["103"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { postIngredients } from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nconst IngredientsForm = (props) => {\n  console.log(\"props in the IngredientsForm: \", props);\n\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n  });\n  console.log(\"ingredient\", ingredient);\n\n  const [recipeGet, setRecipeGet] = useState([{}]);\n  console.log(\"recipeGet: \", recipeGet);\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/${id}`)\n      .then((res) => {\n        console.log(\n          \"IngredientsForm: useEffect(): res: \",\n          res.data.ingredients\n        );\n        setRecipeGet([...res.data.ingredients]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.ingredients, props.recipe]);\n\n  const recipe = props.recipes.find((recipe) => recipe.id === Number(id));\n  console.log(\"recipe params: \", recipe);\n\n  const handleChange = (e) => {\n    setIngredient({ name: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.postIngredients(recipe.id, ingredient);\n    setIngredient({ name: \"\" });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h3>Enter Ingredients:</h3>\n        <input\n          name=\"ingredient\"\n          value={ingredient.name}\n          onChange={handleChange}\n        />\n        <button>Add Ingredient</button>\n      </form>\n      <div>\n        {recipeGet.map((ingr) => (\n          <p>{ingr.name}</p>\n        ))}\n      </div>\n      <button onClick={() => history.push(`/recipe/${id}`)}>\n        Done adding ingredients\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n    ingredients: state.ingredients,\n    userId: state.userId,\n  };\n};\nexport default connect(mapStateToProps, { postIngredients })(IngredientsForm);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Dashboard.js",["104"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport img_placeholder from \"../../src/img_placeholder.png\";\nimport { connect } from \"react-redux\";\nimport { getUserRecipes } from \"../store/actions\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  RecipeCard,\n  Welcome,\n  Button,\n  CardTitle,\n  RecipesContainer,\n  Thumbnail,\n  ThumbnailContainer,\n  ButtonWrap,\n} from \"../styles\";\nimport SearchBar from \"./SearchBar\";\n\nconst Dashboard = (props) => {\n  console.log(\"props in the dashboard: \", props);\n\n  useEffect(() => {\n    //I think this needs to be changed to an axios call\n    props.getUserRecipes(props.userId);\n  }, []);\n\n  return (\n    <div>\n      {props.username && <Welcome>Welcome {props.username}</Welcome>}\n      <SearchBar recipes={props.recipes} userId={props.userId} />\n      <Link to=\"/add_recipe\">\n        <ButtonWrap>\n          <Button>Add New Recipe</Button>\n        </ButtonWrap>\n      </Link>\n\n      {props.isLoading === true ? (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#000\"\n          height={100}\n          width={100}\n          timeout={6000}\n        />\n      ) : null}\n      <RecipesContainer>\n        {props.recipes &&\n          props.recipes.map((rec) => (\n            <Link\n              to={`/recipe/${rec.id}`}\n              key={rec.id}\n              style={{\n                textDecoration: \"none\",\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <RecipeCard>\n                <CardTitle>\n                  <h4>{rec.title}</h4>\n                </CardTitle>\n                <ThumbnailContainer>\n                  {rec.image === \"\" ? (\n                    <Thumbnail\n                      src={img_placeholder}\n                      alt=\"dish image not provided\"\n                    />\n                  ) : (\n                    <Thumbnail src={rec.image} alt=\"Dish\" />\n                  )}\n                </ThumbnailContainer>\n                <p>Category: {rec.category}</p>\n              </RecipeCard>\n            </Link>\n          ))}\n      </RecipesContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.username,\n    recipes: state.recipes,\n    userId: state.userId,\n    isLoading: state.isLoading,\n  };\n};\nexport default connect(mapStateToProps, { getUserRecipes })(Dashboard);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/NavBar.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Recipe.js",["105","106"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/UpdateForm.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientList.js",["107"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/AddRecipe.js",["108","109"],"import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { addRecipe } from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst AddRecipe = (props) => {\n  console.log(\"props in the AddRecipe component: \", props);\n  const history = useHistory();\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState({\n    title: \"\",\n    source: \"\",\n    category: \"\",\n    image: \"\",\n  });\n  console.log(recipe);\n  const handleChange = (e) => {\n    setRecipe({\n      ...recipe,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const saveRecipe = (e) => {\n    e.preventDefault();\n    props.addRecipe(recipe, props.userId);\n    history.push(`/dashboard/`);\n  };\n  return (\n    <div>\n      <h3>Add Recipe Form</h3>\n      <form onSubmit={saveRecipe}>\n        <input\n          placeholder=\"Enter Title\"\n          name=\"title\"\n          value={recipe.title}\n          onChange={handleChange}\n        />\n        <input\n          placeholder=\"Enter Source\"\n          name=\"source\"\n          value={recipe.source}\n          onChange={handleChange}\n        />\n        <input\n          placeholder=\"Enter Category\"\n          name=\"category\"\n          value={recipe.category}\n          onChange={handleChange}\n        />\n        <input\n          placeholder=\"Enter URL for recipe image\"\n          name=\"image\"\n          value={recipe.image}\n          onChange={handleChange}\n        />\n        <button>Add Recipe</button>\n      </form>\n      <button\n        onClick={() => {\n          history.push(\"/dashboard\");\n        }}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.userId,\n  };\n};\nexport default connect(mapStateToProps, { addRecipe })(AddRecipe);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/styles.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Ingredient.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/SearchBar.js",["110"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SearchContainer, SearchCentered } from \"../styles\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nconst SearchBar = (props) => {\n  const [search, setSearch] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/user/${props.userId}`)\n      .then((res) => {\n        console.log(res.data);\n        setRecipes(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.recipes]);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  const performSearch = (e) => {\n    e.preventDefault();\n    setResults(\n      recipes.filter(\n        (recipe) => recipe.title === search || recipe.category === search\n      )\n    );\n    setSearch(\"\");\n  };\n\n  return (\n    <SearchContainer>\n      <SearchCentered>\n        <h3>Search for Recipes</h3>\n        <form onSubmit={performSearch}>\n          <input\n            placeholder=\"Enter recipe title to search here\"\n            name=\"search\"\n            value={search}\n            onChange={handleChange}\n          />\n          <button>Search</button>\n        </form>\n      </SearchCentered>\n      <SearchCentered>\n        <h4>Results:</h4>\n        {results.length >= 1 &&\n          results.map((result) => (\n            <div>\n              <Link to={`/recipe/${result.id}`}>{result.title}</Link>\n            </div>\n          ))}\n      </SearchCentered>\n    </SearchContainer>\n  );\n};\n\nexport default SearchBar;\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsForm.js",["111"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { postInstructions } from \"../store/actions\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nconst InstructionsForm = (props) => {\n  console.log(\"InstructionsForm: props: \", props);\n  const history = useHistory();\n  const { id } = useParams();\n  console.log(\"InstructionForm: id for the recipe: \", id);\n  const [instruction, setInstruction] = useState({\n    step: \"\",\n    details: \"\",\n  });\n  console.log(\"InstructionsForm: instruction:\", instruction);\n  const [instructionList, setInstructionList] = useState([{}]);\n  console.log(\"instructionList\", instructionList);\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/${id}`)\n      .then((res) => {\n        console.log(res.data.instructions);\n        setInstructionList([...res.data.instructions]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.instructions]);\n\n  const handleChange = (e) => {\n    setInstruction({\n      ...instruction,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.postInstructions(id, instruction);\n    setInstruction({\n      step: \"\",\n      details: \"\",\n    });\n  };\n\n  return (\n    <div>\n      this is the instructions component\n      <form>\n        <label htmlFor=\"step\">Step #:</label>\n        <input\n          id=\"step\"\n          name=\"step\"\n          value={instruction.step}\n          onChange={handleChange}\n        />\n        <br />\n        <label htmlFor=\"details\">Details: </label>\n        <input\n          id=\"details\"\n          name=\"details\"\n          value={instruction.details}\n          onChange={handleChange}\n        />\n        <br />\n        <button onClick={handleSubmit}>Save Step</button>\n        <button onClick={() => history.push(`/recipe/${id}`)}>\n          Done adding instructions\n        </button>\n      </form>\n      <div>\n        {instructionList.map((inst) => (\n          <div>\n            <p>Step#: {inst.step}</p>\n            <p>Details: {inst.details}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    instructions: state.instructions,\n  };\n};\nexport default connect(mapStateToProps, { postInstructions })(InstructionsForm);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsList.js",["112","113"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Step.js",["114","115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":246,"column":5,"nodeType":"123","messageId":"124","endLine":252,"endColumn":6},{"ruleId":"125","severity":1,"message":"126","line":34,"column":6,"nodeType":"127","endLine":34,"endColumn":39,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":36,"column":6,"nodeType":"127","endLine":36,"endColumn":20,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":27,"column":10,"nodeType":"133","messageId":"134","endLine":27,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":81,"column":15,"nodeType":"137","endLine":81,"endColumn":70},{"ruleId":"125","severity":1,"message":"126","line":23,"column":6,"nodeType":"127","endLine":23,"endColumn":25,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":17},{"ruleId":"131","severity":1,"message":"140","line":17,"column":11,"nodeType":"133","messageId":"134","endLine":17,"endColumn":13},{"ruleId":"125","severity":1,"message":"141","line":21,"column":6,"nodeType":"127","endLine":21,"endColumn":21,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"126","line":30,"column":6,"nodeType":"127","endLine":30,"endColumn":26,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"144","line":2,"column":21,"nodeType":"133","messageId":"134","endLine":2,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":27,"column":6,"nodeType":"127","endLine":27,"endColumn":26,"suggestions":"145"},{"ruleId":"131","severity":1,"message":"146","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":19},{"ruleId":"131","severity":1,"message":"144","line":2,"column":21,"nodeType":"133","messageId":"134","endLine":2,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":26,"column":6,"nodeType":"127","endLine":26,"endColumn":57,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["151"],"no-unused-vars","'recipes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["152"],"'ButtonCentered' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array.",["153"],["154"],"'useHistory' is defined but never used.",["155"],"'useParams' is defined but never used.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [id, props.ingredients, props.recipe]",{"range":"170","text":"171"},"Update the dependencies array to be: [props.userId, userId]",{"range":"172","text":"173"},"Update the dependencies array to be: [id, props.ingredients]",{"range":"174","text":"175"},"Update the dependencies array to be: [props.recipes, props.userId]",{"range":"176","text":"177"},"Update the dependencies array to be: [id, props.instructions]",{"range":"178","text":"179"},{"range":"180","text":"179"},"Update the dependencies array to be: [props.instruction.step, props.instruction.details, id]",{"range":"181","text":"182"},[951,984],"[id, props.ingredients, props.recipe]",[945,959],"[props.userId, userId]",[841,860],"[id, props.ingredients]",[625,640],"[props.recipes, props.userId]",[1005,1025],"[id, props.instructions]",[821,841],[846,897],"[props.instruction.step, props.instruction.details, id]"]