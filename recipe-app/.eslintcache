[{"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/index.js":"1","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/reportWebVitals.js":"2","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/App.js":"3","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/reducers/index.js":"4","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Login.js":"5","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/utils/axiosWithAuth.js":"6","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Signup.js":"7","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/PrivateRoute.js":"8","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/actionTypes.js":"9","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/index.js":"10","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientsForm.js":"11","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Dashboard.js":"12","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/NavBar.js":"13","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Recipe.js":"14","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/UpdateForm.js":"15","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientList.js":"16","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/AddRecipe.js":"17","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/styles.js":"18","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Ingredient.js":"19","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsForm.js":"20","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/SearchBar.js":"21","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsList.js":"22","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Step.js":"23"},{"size":1015,"mtime":1609314905719,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1608141854567,"results":"26","hashOfConfig":"25"},{"size":1349,"mtime":1609633477088,"results":"27","hashOfConfig":"25"},{"size":6484,"mtime":1609744780439,"results":"28","hashOfConfig":"25"},{"size":2091,"mtime":1609633477099,"results":"29","hashOfConfig":"25"},{"size":251,"mtime":1609314905726,"results":"30","hashOfConfig":"25"},{"size":1784,"mtime":1609744780435,"results":"31","hashOfConfig":"25"},{"size":459,"mtime":1608235072322,"results":"32","hashOfConfig":"25"},{"size":2123,"mtime":1609633477113,"results":"33","hashOfConfig":"25"},{"size":5643,"mtime":1609744780438,"results":"34","hashOfConfig":"25"},{"size":2121,"mtime":1609745251441,"results":"35","hashOfConfig":"25"},{"size":3018,"mtime":1609745251439,"results":"36","hashOfConfig":"25"},{"size":1333,"mtime":1609744780431,"results":"37","hashOfConfig":"25"},{"size":3165,"mtime":1609744780432,"results":"38","hashOfConfig":"25"},{"size":2295,"mtime":1609744780437,"results":"39","hashOfConfig":"25"},{"size":970,"mtime":1609745251440,"results":"40","hashOfConfig":"25"},{"size":2376,"mtime":1609744780419,"results":"41","hashOfConfig":"25"},{"size":3828,"mtime":1609633477119,"results":"42","hashOfConfig":"25"},{"size":1950,"mtime":1609633477093,"results":"43","hashOfConfig":"25"},{"size":2390,"mtime":1609745251443,"results":"44","hashOfConfig":"25"},{"size":1595,"mtime":1609745251445,"results":"45","hashOfConfig":"25"},{"size":957,"mtime":1609745251443,"results":"46","hashOfConfig":"25"},{"size":2203,"mtime":1609744780436,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"86h1rn",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/index.js",[],["103","104"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/reportWebVitals.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/App.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/reducers/index.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Login.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/utils/axiosWithAuth.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Signup.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/PrivateRoute.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/actionTypes.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/store/actions/index.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientsForm.js",["105"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { postIngredients } from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport {\n  ItemForm,\n  ItemLabel,\n  ItemInput,\n  ButtonWrap,\n  Button,\n  DisplayList,\n} from \"../styles\";\n\nconst IngredientsForm = (props) => {\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n  });\n\n  const [recipeGet, setRecipeGet] = useState([{}]);\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/${id}`)\n      .then((res) => {\n        setRecipeGet([...res.data.ingredients]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.ingredients, props.recipe]);\n\n  const recipe = props.recipes.find((recipe) => recipe.id === Number(id));\n\n  const handleChange = (e) => {\n    setIngredient({ name: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.postIngredients(recipe.id, ingredient);\n    setIngredient({ name: \"\" });\n  };\n\n  return (\n    <div>\n      <ItemForm>\n        <h3>Enter Ingredients:</h3>\n        <ItemLabel htmlFor=\"ingredient\">Ingredient</ItemLabel>\n        <ItemInput\n          name=\"ingredient\"\n          id=\"ingredient\"\n          value={ingredient.name}\n          onChange={handleChange}\n          style={{ marginBottom: \"2rem\" }}\n        />\n        <ButtonWrap>\n          <Button onClick={handleSubmit}>Add Ingredient</Button>\n        </ButtonWrap>\n      </ItemForm>\n      <DisplayList>\n        {recipeGet.map((ingr) => (\n          <p key={ingr.id}>{ingr.name}</p>\n        ))}\n      </DisplayList>\n      <ButtonWrap>\n        <Button onClick={() => history.push(`/recipe/${id}`)}>\n          Done adding ingredients\n        </Button>\n      </ButtonWrap>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n    ingredients: state.ingredients,\n    userId: state.userId,\n  };\n};\nexport default connect(mapStateToProps, { postIngredients })(IngredientsForm);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Dashboard.js",["106"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport img_placeholder from \"../../src/img_placeholder.png\";\nimport { connect } from \"react-redux\";\nimport { getUserRecipes } from \"../store/actions\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  RecipeCard,\n  Welcome,\n  Button,\n  CardTitle,\n  RecipesContainer,\n  Thumbnail,\n  ThumbnailContainer,\n  ButtonWrap,\n} from \"../styles\";\nimport SearchBar from \"./SearchBar\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nconst Dashboard = (props) => {\n  console.log(\"props in the dashboard: \", props);\n  const userId = props.userId;\n\n  const [recipesByUser, setRecipesByUser] = useState([]);\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/user/${userId}`)\n      .then((res) => {\n        console.log(res.data);\n        setRecipesByUser(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.userId, props.recipes]);\n\n  return (\n    <div>\n      {recipesByUser && <Welcome>Welcome {props.username}</Welcome>}\n      <SearchBar recipes={recipesByUser} userId={props.userId} />\n      <Link to=\"/add_recipe\" style={{ textDecoration: \"none\" }}>\n        <ButtonWrap>\n          <Button>Add New Recipe</Button>\n        </ButtonWrap>\n      </Link>\n\n      {props.isLoading && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#000\"\n          height={100}\n          width={100}\n          timeout={10000}\n        />\n      )}\n      {props.error ? (\n        <h2\n          style={{ color: \"red\" }}\n          onClick={() => props.getUserRecipes(props.userId)}\n        >\n          SORRY! An error has occurred. Click here to try again, or log back in.\n          🙇\n        </h2>\n      ) : (\n        <RecipesContainer>\n          {recipesByUser &&\n            recipesByUser.map((rec) => (\n              <Link\n                to={`/recipe/${rec.id}`}\n                key={rec.id}\n                style={{\n                  textDecoration: \"none\",\n                  display: \"flex\",\n                  justifyContent: \"space-evenly\",\n                }}\n              >\n                <RecipeCard>\n                  <CardTitle>\n                    <h4>{rec.title}</h4>\n                  </CardTitle>\n                  <ThumbnailContainer>\n                    {rec.image === \"\" ? (\n                      <Thumbnail\n                        src={img_placeholder}\n                        alt=\"dish image not provided\"\n                      />\n                    ) : (\n                      <Thumbnail src={rec.image} alt=\"Dish\" />\n                    )}\n                  </ThumbnailContainer>\n                  <p>Category: {rec.category}</p>\n                </RecipeCard>\n              </Link>\n            ))}\n        </RecipesContainer>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.username,\n    recipes: state.recipes,\n    userId: state.userId,\n    isLoading: state.isLoading,\n    error: state.error,\n  };\n};\nexport default connect(mapStateToProps, { getUserRecipes })(Dashboard);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/NavBar.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Recipe.js",["107","108"],"import React, { useEffect, useState } from \"react\";\nimport img_placeholder from \"../../src/img_placeholder.png\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport {\n  deleteRecipe,\n  editIngredient,\n  deleteIngredient,\n} from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport {\n  RecipeContainer,\n  RecipeTitle,\n  Button,\n  ButtonWrap,\n  RightContent,\n  LeftContent,\n  Image,\n} from \"../styles\";\nimport IngredientList from \"./IngredientList\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport InstructionsList from \"./InstructionsList\";\n\nconst Recipe = (props) => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [recipes, setRecipes] = useState([]);\n\n  const recipe = props.recipes.find((rec) => rec.id === Number(id));\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/user/${props.userId}`)\n      .then((res) => {\n        setRecipes(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [props.userId, props.recipe]);\n\n  const handleDelete = () => {\n    props.deleteRecipe(id);\n    history.push(\"/dashboard\");\n  };\n\n  return (\n    <RecipeContainer>\n      <LeftContent>\n        <RecipeTitle>{recipe.title}</RecipeTitle>\n        <p>Source will go here: {recipe.source}</p>\n        <div>\n          <h3>Ingredients: </h3>\n          <IngredientList />\n          <ButtonWrap>\n            <Button\n              onClick={() => history.push(`/recipe/${id}/ingredients_form`)}\n            >\n              {\" \"}\n              Add Ingredients\n            </Button>\n          </ButtonWrap>\n        </div>\n        <div>\n          <h3>Instructions: </h3>\n          <InstructionsList />\n          <ButtonWrap>\n            <Button\n              onClick={() => history.push(`/recipe/${id}/instructions_form`)}\n            >\n              Add Instructions\n            </Button>\n          </ButtonWrap>\n        </div>\n      </LeftContent>\n      <RightContent>\n        <div>\n          {recipe.image === \"\" ? (\n            <Image src={img_placeholder} alt=\"user image missing\" />\n          ) : (\n            <div>\n              <img src={recipe.image} alt=\"the image will go here\" />\n            </div>\n          )}\n        </div>\n\n        <div>\n          <ButtonWrap>\n            <Button\n              style={{\n                marginRight: \"1rem\",\n                padding: \".5rem\",\n              }}\n              onClick={() => {\n                history.push(`/recipe/${id}/update_recipe`);\n              }}\n            >\n              edit recipe\n            </Button>\n            <Button onClick={handleDelete}>delete recipe</Button>\n          </ButtonWrap>\n        </div>\n        <ButtonWrap>\n          <Link to={\"/dashboard\"} style={{ marginTop: \".5rem\" }}>\n            Back to your recipes\n          </Link>\n        </ButtonWrap>\n      </RightContent>\n    </RecipeContainer>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n    ingredients: state.ingredients,\n    instructions: state.instructions,\n    userId: state.userId,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteRecipe,\n  editIngredient,\n  deleteIngredient,\n})(Recipe);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/UpdateForm.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/IngredientList.js",["109"],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/AddRecipe.js",["110"],"import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { addRecipe } from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport {\n  CenteredForm,\n  StyledLabel,\n  StyledInput,\n  Button,\n  ButtonWrap,\n} from \"../styles\";\n\nconst AddRecipe = (props) => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState({\n    title: \"\",\n    source: \"\",\n    category: \"\",\n    image: \"\",\n  });\n  const handleChange = (e) => {\n    setRecipe({\n      ...recipe,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const saveRecipe = (e) => {\n    e.preventDefault();\n    props.addRecipe(recipe, props.userId);\n    history.push(`/dashboard/`);\n  };\n  return (\n    <CenteredForm>\n      <h3>Add Recipe Form</h3>\n      <form onSubmit={saveRecipe}>\n        <StyledLabel htmlFor=\"title\">Recipe Title:</StyledLabel>\n        <StyledInput\n          placeholder=\"Enter Title\"\n          name=\"title\"\n          id=\"title\"\n          value={recipe.title}\n          onChange={handleChange}\n        />\n        <br />\n        <StyledLabel htmlFor=\"source\">Recipe Source:</StyledLabel>\n        <StyledInput\n          placeholder=\"Enter Source\"\n          name=\"source\"\n          id=\"source\"\n          value={recipe.source}\n          onChange={handleChange}\n        />\n        <br />\n        <StyledLabel htmlFor=\"category\">Category: </StyledLabel>\n        <StyledInput\n          placeholder=\"Enter Category\"\n          name=\"category\"\n          id=\"category\"\n          value={recipe.category}\n          onChange={handleChange}\n        />\n        <br />\n        <StyledLabel htmlFor=\"image\">Image URL:</StyledLabel>\n        <StyledInput\n          placeholder=\"Enter URL for recipe image\"\n          name=\"image\"\n          id=\"image\"\n          value={recipe.image}\n          onChange={handleChange}\n        />\n\n        <br />\n        <ButtonWrap>\n          <Button style={{ margin: \"1rem\" }}>Add Recipe</Button>\n        </ButtonWrap>\n      </form>\n      <ButtonWrap>\n        <Button\n          onClick={() => {\n            history.push(\"/dashboard\");\n          }}\n        >\n          Cancel\n        </Button>\n      </ButtonWrap>\n    </CenteredForm>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.userId,\n  };\n};\nexport default connect(mapStateToProps, { addRecipe })(AddRecipe);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/styles.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Ingredient.js",[],"/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsForm.js",["111"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { postInstructions } from \"../store/actions\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport {\n  Button,\n  ButtonWrap,\n  DisplayList,\n  ItemForm,\n  ItemLabel,\n  ItemInput,\n  TextArea,\n  Step,\n} from \"../styles\";\n\nconst InstructionsForm = (props) => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [instruction, setInstruction] = useState({\n    step: \"\",\n    details: \"\",\n  });\n  const [instructionList, setInstructionList] = useState([{}]);\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/${id}`)\n      .then((res) => {\n        setInstructionList([...res.data.instructions]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.instructions]);\n\n  const handleChange = (e) => {\n    setInstruction({\n      ...instruction,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.postInstructions(id, instruction);\n    setInstruction({\n      step: \"\",\n      details: \"\",\n    });\n  };\n\n  return (\n    <div>\n      <ItemForm>\n        <ItemLabel htmlFor=\"step\">Step #:</ItemLabel>\n        <ItemInput\n          id=\"step\"\n          name=\"step\"\n          value={instruction.step}\n          onChange={handleChange}\n        />\n        <br />\n        <ItemLabel htmlFor=\"details\">Details: </ItemLabel>\n        <TextArea\n          id=\"details\"\n          style={{ resize: \"vertical\", rows: \"3\" }}\n          name=\"details\"\n          value={instruction.details}\n          onChange={handleChange}\n        />\n        <br />\n        <ButtonWrap>\n          <Button onClick={handleSubmit}>Save Step</Button>\n        </ButtonWrap>\n      </ItemForm>\n      <DisplayList>\n        {instructionList.map((inst) => (\n          <Step key={inst.id}>\n            <p>Step#: {inst.step}</p>\n            <p>Details: {inst.details}</p>\n          </Step>\n        ))}\n      </DisplayList>\n      <ButtonWrap>\n        <Button onClick={() => history.push(`/recipe/${id}`)}>\n          Done adding instructions\n        </Button>\n      </ButtonWrap>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    instructions: state.instructions,\n  };\n};\nexport default connect(mapStateToProps, { postInstructions })(InstructionsForm);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/SearchBar.js",["112","113"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SearchContainer, SearchCentered } from \"../styles\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nconst SearchBar = (props) => {\n  console.log(\"props in the searchBar: \", props);\n  const [search, setSearch] = useState();\n  const [recipes, setRecipes] = useState([]);\n  const [results, setResults] = useState([]);\n  console.log(\"results\", results);\n  const [resultError, setResultError] = useState(false);\n  console.log(\"resultError\", resultError);\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/user/${props.userId}`)\n      .then((res) => {\n        console.log(res.data);\n        setRecipes(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.recipes]);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n    setResults(\n      recipes.filter(\n        (recipe) =>\n          recipe.title.toLowerCase().includes(search.toLowerCase()) ||\n          recipe.category.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  };\n  const performSearch = (e) => {\n    e.preventDefault();\n    setSearch(\"\");\n  };\n\n  const handleClear = (e) => {\n    setResults([]);\n  };\n\n  return (\n    <SearchContainer>\n      <SearchCentered>\n        <h3>Search for Recipes</h3>\n        <form onSubmit={performSearch}>\n          <input\n            placeholder=\"Enter title or category\"\n            name=\"search\"\n            value={search}\n            onChange={handleChange}\n          />\n          <button>reset</button>\n        </form>\n        <button onClick={handleClear}>Clear Results</button>\n      </SearchCentered>\n      <SearchCentered>\n        {results.length >= 1 && (\n          <>\n            <h4>Number of Results: {results.length}</h4>\n            {results.map((result) => (\n              <div key={result.id}>\n                <Link to={`/recipe/${result.id}`}>{result.title}</Link>\n              </div>\n            ))}\n          </>\n        )}\n      </SearchCentered>\n    </SearchContainer>\n  );\n};\n\nexport default SearchBar;\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/InstructionsList.js",["114"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { IngredientDiv } from \"../styles\";\n\nimport Step from \"./Step\";\n\nconst InstructionsList = (props) => {\n  const { id } = useParams();\n\n  const [gottenInstructions, setGottenInstructions] = useState([]);\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/recipes/${id}`)\n      .then((res) => {\n        setGottenInstructions([...res.data.instructions]);\n      })\n      .catch((err) => console.log(err));\n  }, [props.instructions]);\n\n  return (\n    <IngredientDiv>\n      {gottenInstructions.map((instruction) => (\n        <Step key={instruction.id} instruction={instruction} />\n      ))}\n    </IngredientDiv>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    instructions: state.instructions,\n  };\n};\nexport default connect(mapStateToProps, {})(InstructionsList);\n","/Users/katiuska/Desktop/Lambda/front-end/recipe-app/src/components/Step.js",["115"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { putInstructions, deleteInstruction } from \"../store/actions\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { ActionButtons, InstructionsDiv } from \"../styles\";\n\nconst Step = (props) => {\n  const id = props.instruction.id;\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [step, setStep] = useState({\n    step: props.instruction.step,\n    details: props.instruction.details,\n  });\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`/api/instructions/${id}`)\n      .then((res) => {})\n      .catch((err) => console.log(err));\n  }, [props.instruction.step, props.instruction.details]);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setStep({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleSave = () => {\n    props.putInstructions(id, step);\n    setIsEditing(!isEditing);\n  };\n\n  return (\n    <div>\n      {isEditing ? (\n        <InstructionsDiv>\n          <form>\n            Step#:{\" \"}\n            <input name=\"step\" value={step.step} onChange={handleChange} />\n            <br />\n            Details:{\" \"}\n            <input\n              name=\"details\"\n              value={step.details}\n              onChange={handleChange}\n            />\n            <br />\n            <ActionButtons onClick={handleSave}>save</ActionButtons>\n          </form>\n          <ActionButtons\n            style={{ backgroundColor: \"#ff9999\" }}\n            onClick={handleEdit}\n          >\n            cancel\n          </ActionButtons>\n        </InstructionsDiv>\n      ) : (\n        <InstructionsDiv>\n          <p>Step #{props.instruction.step}: </p>\n          <p>Details: {props.instruction.details}</p>\n          <ActionButtons onClick={handleEdit}>Edit</ActionButtons>\n          <ActionButtons\n            style={{ backgroundColor: \"#ff9999\" }}\n            onClick={() => props.deleteInstruction(id)}\n          >\n            delete\n          </ActionButtons>\n        </InstructionsDiv>\n      )}\n    </div>\n  );\n};\n\nexport default connect(null, { putInstructions, deleteInstruction })(Step);\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":34,"column":6,"nodeType":"122","endLine":34,"endColumn":39,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":35,"column":6,"nodeType":"122","endLine":35,"endColumn":35,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":26,"column":10,"nodeType":"128","messageId":"129","endLine":26,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":79,"column":15,"nodeType":"132","endLine":79,"endColumn":70},{"ruleId":"120","severity":1,"message":"121","line":20,"column":6,"nodeType":"122","endLine":20,"endColumn":25,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":15,"column":11,"nodeType":"128","messageId":"129","endLine":15,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":35,"column":6,"nodeType":"122","endLine":35,"endColumn":26,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":12,"column":23,"nodeType":"128","messageId":"129","endLine":12,"endColumn":37},{"ruleId":"120","severity":1,"message":"137","line":24,"column":6,"nodeType":"122","endLine":24,"endColumn":21,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"121","line":21,"column":6,"nodeType":"122","endLine":21,"endColumn":26,"suggestions":"139"},{"ruleId":"120","severity":1,"message":"121","line":21,"column":6,"nodeType":"122","endLine":21,"endColumn":57,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["144"],"no-unused-vars","'recipes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["145"],"'id' is assigned a value but never used.",["146"],"'setResultError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array.",["147"],["148"],["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"156","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [id, props.ingredients, props.recipe]",{"range":"163","text":"164"},"Update the dependencies array to be: [props.userId, props.recipes, userId]",{"range":"165","text":"166"},"Update the dependencies array to be: [id, props.ingredients]",{"range":"167","text":"168"},"Update the dependencies array to be: [id, props.instructions]",{"range":"169","text":"170"},"Update the dependencies array to be: [props.recipes, props.userId]",{"range":"171","text":"172"},{"range":"173","text":"170"},"Update the dependencies array to be: [props.instruction.step, props.instruction.details, id]",{"range":"174","text":"175"},[806,839],"[id, props.ingredients, props.recipe]",[895,924],"[props.userId, props.recipes, userId]",[625,644],"[id, props.ingredients]",[864,884],"[id, props.instructions]",[777,792],"[props.recipes, props.userId]",[613,633],[661,712],"[props.instruction.step, props.instruction.details, id]"]